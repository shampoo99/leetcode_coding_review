"""
给定一个n个元素有序的（升序）整型数组nums 和一个目标值target ，写一个函数搜索nums中的 target，如果目标值存在返回下标，否则返回 -1。

示例 1:

输入: nums = [-1,0,3,5,9,12], target = 9
输出: 4
解释: 9 出现在 nums 中并且下标为 4
示例2:

输入: nums = [-1,0,3,5,9,12], target = 2
输出: -1
解释: 2 不存在 nums 中因此返回 -1


提示：

你可以假设 nums中的所有元素是不重复的。
n将在[1, 10000]之间。
nums的每个元素都将在[-9999, 9999]之间。。
"""


class Solution(object):
    def search(self, nums, target):
        """
        :type nums: List[int]
        :type target: int
        :rtype: int
        """
        high = len(nums) - 1
        low = 0
        return self.search_fun(low, high, nums, target)

    def search_fun(self, low, high, nums, target):
        if low == high + 1:
            return -1
        mid = (low + high) / 2
        if target == nums[mid]:
            return mid
        else:
            return self.search_fun(low, mid - 1, nums, target) if nums[mid] > target else self.search_fun(mid + 1, high,
                                                                                                          nums, target)

# 以上为递归的方式，还有一种不递归的方式，内存占用小于递归的
class Solution_1(object):
    def search(self, nums, target):
        """
        :type nums: List[int]
        :type target: int
        :rtype: int
        """
        high = len(nums)-1
        low = 0
        while(low<high+1):
            mid = (low + high) / 2
            if target == nums[mid]:
                return mid
            elif nums[mid] > target:
                high = mid-1
            else:
                low = mid +1

        return -1